{
	"info": {
		"_postman_id": "43f758b4-a5f5-4ba5-9aac-d303b8de3acc",
		"name": "PokÃ©mon API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21763310"
	},
	"item": [
		{
			"name": "berry",
			"item": [
				{
					"name": "getBerryById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// To check Status Code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// To check Status Code is 'OK'\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"// Check the response time. Here it takes 109ms (frequently changes). so 200ms is fine\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"// Check response body contains string -> This won't work properly. Not gonna use it.\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"6\");\r",
									"});\r",
									"\r",
									"// Best way to check string with value: Response body JSON value check. So, in this way we will check all.\r",
									"// soil_dryness\r",
									"var jsonData= pm.response.json();\r",
									"pm.test(\"soil_dryness is Correct\", function(){\r",
									"pm.expect(jsonData.soil_dryness).to.eql(6);\r",
									"})\r",
									"// smoothness\r",
									"pm.test(\"smoothness is Correct\", function(){\r",
									"    pm.expect(jsonData.smoothness).to.eql(30);\r",
									"});\r",
									"// size\r",
									"pm.test(\"size is Correct\", function(){\r",
									"    pm.expect(jsonData.size).to.eql(252);\r",
									"});\r",
									"// natural_gift_power\r",
									"pm.test(\"natural_gift_power is Correct\", function(){\r",
									"    pm.expect(jsonData.natural_gift_power).to.eql(60);\r",
									"});\r",
									"// name\r",
									"pm.test(\"name is Correct\", function(){\r",
									"pm.expect(jsonData.name).to.eql('payapa');\r",
									"});\r",
									"// max_harvest\r",
									"pm.test(\"max_harvest is Correct\", function(){\r",
									"    pm.expect(jsonData.max_harvest).to.eql(5);\r",
									"});\r",
									"// id\r",
									"pm.test(\"id is Correct\", function(){\r",
									"pm.expect(jsonData.id).to.eql(45);\r",
									"});\r",
									"// growth_time\r",
									"pm.test(\"growth_time is Correct\", function(){\r",
									"    pm.expect(jsonData.growth_time).to.eql(18);\r",
									"});\r",
									"// firmness.name\r",
									"pm.test(\"firmness name is Correct\", function(){\r",
									"    pm.expect(jsonData.firmness.name).to.eql('soft');\r",
									"});\r",
									"// firmness.url\r",
									"pm.test(\"firmness url is Correct\", function(){\r",
									"    pm.expect(jsonData.firmness.url).to.eql('https://pokeapi.co/api/v2/berry-firmness/2/');\r",
									"});\r",
									"// item.name\r",
									"pm.test(\"item name is Correct\", function(){\r",
									"    pm.expect(jsonData.item.name).to.eql('payapa-berry');\r",
									"});\r",
									"// item.url\r",
									"pm.test(\"item name is Correct\", function(){\r",
									"    pm.expect(jsonData.item.url).to.eql('https://pokeapi.co/api/v2/item/170/');\r",
									"});\r",
									"// natural_gift_type.name\r",
									"pm.test(\"natural_gift_type name is Correct\", function(){\r",
									"    pm.expect(jsonData.natural_gift_type.name).to.eql('psychic');\r",
									"});\r",
									"// natural_gift_type.url\r",
									"pm.test(\"natural_gift_type name is Correct\", function(){\r",
									"    pm.expect(jsonData.natural_gift_type.url).to.eql('https://pokeapi.co/api/v2/type/14/');\r",
									"});\r",
									"\r",
									"// flavors -> Complicated One -> It is an array\r",
									"// flavor -> 1 ok\r",
									"pm.test(\"flavors[0].flavor.name is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[0].flavor.name).to.eql('spicy');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[0].flavor.url is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[0].flavor.url).to.eql('https://pokeapi.co/api/v2/berry-flavor/1/');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[0].potency is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[0].potency).to.eql(0);\r",
									"});\r",
									"\r",
									"// flavor -> 2\r",
									"pm.test(\"flavors[1].flavor.name is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[1].flavor.name).to.eql('dry');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[1].flavor.url is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[1].flavor.url).to.eql('https://pokeapi.co/api/v2/berry-flavor/2/');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[1].potency is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[1].potency).to.eql(0);\r",
									"});\r",
									"\r",
									"// flavor -> 3\r",
									"pm.test(\"flavors[2].flavor.name is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[2].flavor.name).to.eql('sweet');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[2].flavor.url is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[2].flavor.url).to.eql('https://pokeapi.co/api/v2/berry-flavor/3/');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[2].potency is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[2].potency).to.eql(10);\r",
									"});\r",
									"\r",
									"// flavor -> 4\r",
									"pm.test(\"flavors[3].flavor.name is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[3].flavor.name).to.eql('bitter');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[3].flavor.url is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[3].flavor.url).to.eql('https://pokeapi.co/api/v2/berry-flavor/4/');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[3].potency is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[3].potency).to.eql(0);\r",
									"});\r",
									"\r",
									"// flavor -> 5\r",
									"pm.test(\"flavors[4].flavor.name is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[4].flavor.name).to.eql('sour');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[4].flavor.url is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[4].flavor.url).to.eql('https://pokeapi.co/api/v2/berry-flavor/5/');\r",
									"});\r",
									"\r",
									"pm.test(\"flavors[4].potency is Correct\", function(){\r",
									"    pm.expect(jsonData.flavors[4].potency).to.eql(15);\r",
									"});\r",
									"\r",
									"// These are Response Header Test\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}berry/:id",
							"host": [
								"{{baseUrl}}berry"
							],
							"path": [
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "45"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}